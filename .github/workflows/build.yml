name: Build and Test

on:
  push:
    branches: [clean-branch]
  pull_request:
    branches: [clean-branch]

# Add explicit permissions for GitHub Actions
permissions:
  contents: write
  packages: write
  issues: read
  pull-requests: read

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false  # Don't attempt to fetch submodules
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Install cargo-audit
        run: cargo install cargo-audit
        
      - name: Rust Security Audit
        run: cd src-tauri && cargo audit
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install dependencies and create lock file
        run: npm install
        
      - name: Check for lock file
        run: |
          if [ ! -f package-lock.json ] && [ ! -f yarn.lock ]; then
            echo "Error: No lock file found." >&2
            exit 1
          fi
        
      - name: NPM Security Audit
        run: npm audit --production

  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false  # Don't attempt to fetch submodules
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      
      - name: Set PKG_CONFIG_PATH
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV
      
      - name: Install Linux dependencies for linting
        run: |
          sudo apt-get update
          # Install proper development packages
          sudo apt-get install -y software-properties-common libglib2.0-dev pkg-config
          sudo add-apt-repository universe
          sudo apt-get update
          # Install JavaScriptCore GTK dependency
          sudo apt-get install -y libjavascriptcoregtk-4.1-dev
          # Verify glib installation
          ls -la /usr/lib/x86_64-linux-gnu/pkgconfig/glib-2.0.pc || echo "glib-2.0.pc not found"
          pkg-config --modversion glib-2.0
          # Verify javascriptcoregtk installation
          ls -la /usr/lib/x86_64-linux-gnu/pkgconfig/javascriptcoregtk-4.1.pc || echo "javascriptcoregtk-4.1.pc not found"
          pkg-config --modversion javascriptcoregtk-4.1 || echo "javascriptcoregtk-4.1 not found by pkg-config"
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf || sudo apt-get install -y libwebkit2gtk-4.1-dev
      
      - name: Format Rust code
        run: cd src-tauri && cargo fmt
      
      - name: Rust Formatting Check
        run: cd src-tauri && cargo fmt -- --check
      
      - name: Rust Clippy Check
        run: cd src-tauri && cargo clippy -- -D warnings
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install dependencies
        run: npm install
      
      - name: ESLint Check
        run: npm run lint
      
      - name: Run Prettier to fix issues
        run: npm run format
      
      - name: Prettier Check
        run: npm run format:check

  test:
    name: Test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false  # Don't attempt to fetch submodules
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Set PKG_CONFIG_PATH
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          # Install proper development packages
          sudo apt-get install -y software-properties-common libglib2.0-dev pkg-config
          sudo add-apt-repository universe
          sudo apt-get update
          # Install JavaScriptCore GTK dependency
          sudo apt-get install -y libjavascriptcoregtk-4.1-dev
          # Verify glib installation
          ls -la /usr/lib/x86_64-linux-gnu/pkgconfig/glib-2.0.pc || echo "glib-2.0.pc not found"
          pkg-config --modversion glib-2.0
          # Verify javascriptcoregtk installation
          ls -la /usr/lib/x86_64-linux-gnu/pkgconfig/javascriptcoregtk-4.1.pc || echo "javascriptcoregtk-4.1.pc not found"
          pkg-config --modversion javascriptcoregtk-4.1 || echo "javascriptcoregtk-4.1 not found by pkg-config"
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf || sudo apt-get install -y libwebkit2gtk-4.1-dev
      
      - name: Rust Tests
        run: cd src-tauri && cargo test
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install dependencies
        run: npm install
      
      - name: Frontend Tests
        run: npm test

  build:
    name: Build (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    needs: [security-audit, lint, test]
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - platform: windows-latest
            os: windows-latest
          - platform: macos-latest
            os: macos-latest
          - platform: ubuntu-latest
            os: ubuntu-22.04
    
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false  # Don't attempt to fetch submodules
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install dependencies
        run: npm install
      
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
      
      - name: Set PKG_CONFIG_PATH
        if: matrix.platform == 'ubuntu-latest'
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV
      
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common pkg-config
          sudo add-apt-repository universe
          sudo apt-get update
          
          # Check Ubuntu version
          lsb_release -a
          
          # Explicitly install GLib dependencies
          sudo apt-get install -y libglib2.0-0 libglib2.0-dev
          
          # Install JavaScriptCore GTK dependency
          sudo apt-get install -y libjavascriptcoregtk-4.1-dev
          
          # Verify GLib is properly installed and check version
          echo "Installed GLib packages:"
          dpkg -l | grep libglib
          
          echo "GLib version from pkg-config:"
          pkg-config --modversion glib-2.0
          
          # Verify JavaScriptCore GTK installation
          echo "Installed JavaScriptCore GTK packages:"
          dpkg -l | grep javascriptcore
          
          echo "JavaScriptCore GTK version from pkg-config:"
          pkg-config --modversion javascriptcoregtk-4.1 || echo "javascriptcoregtk-4.1 not found by pkg-config"
          
          # Check GLib version requirement
          echo "Required GLib version for glib-sys crate:"
          grep -r "glib.*version" src-tauri/Cargo.* || echo "No explicit version requirement found"
          
          # Check for .pc file
          echo "Looking for glib-2.0.pc file:"
          ls -la /usr/lib/x86_64-linux-gnu/pkgconfig/glib-2.0.pc || echo "glib-2.0.pc not found"
          
          echo "Looking for javascriptcoregtk-4.1.pc file:"
          ls -la /usr/lib/x86_64-linux-gnu/pkgconfig/javascriptcoregtk-4.1.pc || echo "javascriptcoregtk-4.1.pc not found"
          
          # Install other dependencies
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libdbus-1-dev
          
          # Final verification of PKG_CONFIG_PATH
          echo "PKG_CONFIG_PATH is set to: $PKG_CONFIG_PATH"
          pkg-config --list-all | grep -E 'glib|javascript'
      
      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Explicitly set PKG_CONFIG_PATH in the environment for the build step
          PKG_CONFIG_PATH: /usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig
        with:
          projectPath: "src-tauri"
          tagName: v__VERSION__
          releaseName: "Tauri App v__VERSION__"
          releaseBody: "See the assets to download this version and the changelog for details."
          releaseDraft: true
          prerelease: false 