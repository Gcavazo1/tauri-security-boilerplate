[package]
name = "tauri-security-boilerplate"
version = "1.0.0"
description = "A Tauri 2.0 boilerplate with enterprise-grade security"
authors = ["Gcavazo1"]
license = "MIT"
repository = "https://github.com/Gcavazo1/tauri-security-boilerplate"
edition = "2021"
rust-version = "1.70"
readme = "../README.md"

# Enable additional optimizations for release builds
[profile.release]
panic = "abort"   # Strip expensive panic clean-up logic
codegen-units = 1 # Compile crates one after another for better optimization
lto = true        # Link-time optimization
opt-level = "s"   # Optimize for binary size
strip = true      # Remove debug symbols

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "tauri_security_boilerplate_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
tauri-build = { version = "2.1.0", features = [] }

[dependencies]
# Core Tauri dependencies
tauri = { version = "2.4.0", features = ["devtools"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tauri-plugin-dialog = "2.0.0"
tauri-plugin-shell = "2.0.0"
tauri-plugin-fs = "2.0.0"

# Logging and error handling
log = "0.4.20"
env_logger = "0.10.0"
thiserror = "1.0.50"

# Security related dependencies
once_cell = "1.18.0"
zeroize = "1.6.0"
secrecy = "0.8.0"
constant_time_eq = "0.3.0"
blake3 = "1.5.0"    # Fast cryptographic hash function
base64 = "0.21.5"   # For encoding/decoding sensitive data
rand = "0.8.5"      # For secure random number generation

# Development dependencies
mockall = { version = "0.11.4", optional = true }
tempfile = { version = "3.8.1", optional = true }

[features]
# this feature is used for production builds or when a dev server is not specified, DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
# Enable development tools
dev-tools = ["mockall", "tempfile"]
# Enable auditable builds that include SBOM
auditable = ["dep:cargo-auditable"]

[dependencies.cargo-auditable]
version = "0.6.1"
optional = true

# Enable cargo-auditable support for SBOMs
[package.metadata.auditable]
# Enable SBOM generation
generate-sbom = true

# Enable cargo-audit checks at compile time
[package.metadata.cargo-audit]
ignore = []  # No CVEs to ignore at this time

# Configure tauri-build to not require Windows resources
[package.metadata.tauri-build]
windows = { icon = [] }
